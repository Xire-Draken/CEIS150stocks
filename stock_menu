# -*- coding: utf-8 -*-
"""
Created on Mon Aug 30 22:57:11 2021

@author: D99003734
"""
from datetime import datetime
from stock_class import Stock, DailyData
from account_class import  Traditional, Robo
import matplotlib.pyplot as plt
import csv


def add_stock(stock_list):
    while True:
        print("Adding Stocks")
        
        #4 character symbol input
        symbol = input(f"Enter the 4 character symbol for stock: ").upper()
        if len(symbol) != 4 or symbol.isdigit():
            print("Error: Stock symbol must be exactly 4 characters long and contain only letters.")
            continue
        
        #name of stock input
        name = input(f"Enter the name of the stock: ").capitalize()
        
        #number of shares in number format only
        while True:
            shares = input(f"Enter the number of shares you want: ")
            if shares.isdigit() and int(shares) > 0:
                shares = int(shares)
                break
            else:
                print("Enter valid number of shares.")
                
        #stock list creation
        new_stock = Stock(symbol, name, shares)
        stock_list.append(new_stock)
        
        #continue adding stocks or quit out
        while True:
            option = input("Press 'Enter' to add another stock or '0' to stop: ")
            if option == "0":
                return
            elif option == "":
                break
            else:
                print("Error: Invaid Input. Press 'Enter' to continue or '0' to quit.")


    # Remove stock and all daily data
def delete_stock(stock_list):
    print("Stock Deletion")
    print("[", end = " ")
    for stock in stock_list:
        print(stock.symbol, end = " ")
    print("]")
    deletion = input("Which stock would you like to delete? ").upper()
    found = False
    i = 0
    
    #Iterate through the new list to find the stock symbol
    while i < len(stock_list):
        if stock_list[i].symbol == deletion:
            found = True
            stock_list.pop(i)
            break
        i += i
    if found == True:
        print(f"Deleted {deletion}")
    else:
        print("Symbol was not found.")
    input("Press 'Enter' to continue.")

    # List stocks being tracked
def list_stocks(stock_list):
    #Create header info and border
    print("Stock List")
    print(f"{'SYMBOL':<10}{'NAME':<20}{'SHARES'}")
    print("=" * 36)
    
    #correct spacing to match header and list stock information in comprehensive table 
    #The example given for this part and really complicated so I did ":<14"
    for stock in stock_list:
        print(f"{stock.symbol:<10}{stock.name:<20}{stock.shares}")
    print(input("Press 'Enter' to continue."))
    
    # Add Daily Stock Data
def add_stock_data(stock_list):
    print("==== Add Daily Stock Data ====")
    print("Stock List: [",end="")
    for stock in stock_list:
        print(stock.symbol," ",end="")
    print("]")

    modifier = input("Which stock would you like to modify?: ").upper()
    found = False

    for stock in stock_list:
        if stock.symbol == modifier:
            found = True
            current_stock = stock
    if found == True:
        print("Ready to add data to: ", modifier)
        print("Enter data separated by commas - Do Not Use Spaces.")
        print("Enter a Blank Line to Quit.")
        print("Enter Date,Price,Volume")
        print("EXAMPLE: 8/28/20,47.85,10550")
        data = input("Enter Date,Price,Volume: ")
        while data != "":
            date, price, volume = data.split(",")
            daily_data = DailyData(date,float(price),float(volume))

            current_stock.add_data(daily_data)
            data = input("Enter Date,Price,Volume: ")
        print("Date Entry Completed.")
    else:
        print("Symbol Not Found ***")
    _ = input("Press Enter to Continue ***")

    
def investment_type(stock_list):
    print("Investment Account ---")
    balance = float(input("What is your initial balance: "))
    number = input("What is your account number: ")
    acct= input("Do you want a Traditional (t) or Robo (r) account: ")
    if acct.lower() == "r":
        years = float(input("How many years until retirement: "))
        robo_acct = Robo(balance, number, years)
        print("Your investment return is ",robo_acct.investment_return())
        print("\n\n")
    elif acct.lower() == "t":
        trad_acct = Traditional(balance, number)
        temp_list=[]
        print("Choose stocks from the list below: ")
        while True:
            print("Stock List: [",end="")
            for stock in stock_list:
                print(stock.symbol," ",end="")
            print("]")
            symbol = input("Which stock do you want to purchase, 0 to quit: ").upper()
            if symbol =="0":
                break
            shares = float(input("How many shares do you want to buy?: "))
            found = False
            for stock in stock_list:
              if stock.symbol == symbol:
                  found = True
                  current_stock = stock
            if found == True:
                current_stock.shares += shares 
                temp_list.append(current_stock)
                print("Bought ",shares,"of",symbol)
            else:
                print("Symbol Not Found ***")
        trad_acct.add_stock(temp_list)

# Function to create stock chart
def display_stock_chart(stock_list,symbol):
    print("This method is under construction")

# Display Chart
def display_chart(stock_list):
    print("This method is under construction")
  
                
 # Get price and volume history from Yahoo! Finance using CSV import.
def import_stock_csv(stock_list):
    print("This method is under construction")
    
   # Display Report for All Stocks
def display_report(stock_list):
    print("This method is under construction")
    
def main_menu(stock_list):
    option = ""
    while True:
        print("Stock Analyzer ---")
        print("1 - Add Stock")
        print("2 - Delete Stock")
        print("3 - List stocks")
        print("4 - Add Daily Stock Data (Date, Price, Volume)")
        print("5 - Show Chart")
        print("6 - Investor Type")
        print("7 - Load Data")
        print("0 - Exit Program")
        option = input("Enter Menu Option: ")
        if option =="0":
            print("Goodbye")
            break
        
        if option == "1":
            add_stock(stock_list)
        elif option == "2":
            delete_stock(stock_list)
        elif option == "3":
            list_stocks(stock_list)
        elif option == "4":
           add_stock_data(stock_list) 
        elif option == "5":
            display_chart(stock_list)
        elif option == "6":
            investment_type(stock_list)
        elif option == "7":
            import_stock_csv(stock_list)
        else:
            
            print("Goodbye")

# Begin program
def main():
    stock_list = []
    main_menu(stock_list)

# Program Starts Here
if __name__ == "__main__":
    # execute only if run as a stand-alone script
    main()